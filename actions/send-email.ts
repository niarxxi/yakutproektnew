"use server";
import { z } from "zod";
import nodemailer from "nodemailer";

// –°—Ö–µ–º–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –¥–ª—è —Ñ–æ—Ä–º—ã
const formSchema = z.object({
  name: z
    .string()
    .min(2, { message: "–ò–º—è –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –Ω–µ –º–µ–Ω–µ–µ 2 —Å–∏–º–≤–æ–ª–æ–≤" }),
  email: z.string().email({ message: "–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email" }),
  phone: z.string().optional(),
  message: z
    .string()
    .min(10, { message: "–°–æ–æ–±—â–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –Ω–µ –º–µ–Ω–µ–µ 10 —Å–∏–º–≤–æ–ª–æ–≤" }),
});

export type FormData = z.infer<typeof formSchema>;

// –°–æ–∑–¥–∞–Ω–∏–µ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–µ—Ä–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ email
const createTransporter = () => {
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
  if (!process.env.EMAIL_USER || !process.env.EMAIL_PASS) {
    throw new Error(
      "EMAIL_USER –∏ EMAIL_PASS –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è"
    );
  }

  return nodemailer.createTransport({
    service: "gmail",
    auth: {
      user: process.env.EMAIL_USER,
      pass: process.env.EMAIL_PASS,
    },
  });
};

export async function sendEmail(formData: FormData) {
  try {
    // –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö —Ñ–æ—Ä–º—ã
    const validatedData = formSchema.parse(formData);

    // –°–æ–∑–¥–∞–Ω–∏–µ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–µ—Ä–∞
    const transporter = createTransporter();

    // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–∏—Å—å–º–∞
    const mailOptions = {
      from: `"–ó–∞—è–≤–∫–∞ —Å —Å–∞–π—Ç–∞" <${process.env.EMAIL_USER}>`,
      to: "yakutproekt@mail.ru",
      subject: `–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –æ—Ç ${validatedData.name}`,
      html: `
        <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto; padding: 20px;">
          <div style="border: 1px solid #e0e0e0; border-radius: 8px; padding: 30px; background-color: #ffffff;">
            <h2 style="color: #333; margin-bottom: 20px; text-align: center;">
              üìß –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ —Å —Å–∞–π—Ç–∞
            </h2>
            
            <div style="background: #f8f9fa; padding: 20px; border-radius: 6px; margin-bottom: 20px;">
              <table style="width: 100%; border-collapse: collapse;">
                <tr>
                  <td style="padding: 10px 0; border-bottom: 1px solid #e9ecef;">
                    <strong style="color: #495057;">üë§ –ò–º—è:</strong>
                  </td>
                  <td style="padding: 10px 0; border-bottom: 1px solid #e9ecef; text-align: right;">
                    ${validatedData.name}
                  </td>
                </tr>
                <tr>
                  <td style="padding: 10px 0; border-bottom: 1px solid #e9ecef;">
                    <strong style="color: #495057;">üìß Email:</strong>
                  </td>
                  <td style="padding: 10px 0; border-bottom: 1px solid #e9ecef; text-align: right;">
                    <a href="mailto:${
                      validatedData.email
                    }" style="color: #007bff; text-decoration: none;">
                      ${validatedData.email}
                    </a>
                  </td>
                </tr>
                <tr>
                  <td style="padding: 10px 0; border-bottom: 1px solid #e9ecef;">
                    <strong style="color: #495057;">üì± –¢–µ–ª–µ—Ñ–æ–Ω:</strong>
                  </td>
                  <td style="padding: 10px 0; border-bottom: 1px solid #e9ecef; text-align: right;">
                    ${validatedData.phone || "–ù–µ —É–∫–∞–∑–∞–Ω"}
                  </td>
                </tr>
              </table>
            </div>
            
            <div style="margin-bottom: 20px;">
              <h3 style="color: #495057; margin-bottom: 10px;">üí¨ –°–æ–æ–±—â–µ–Ω–∏–µ:</h3>
              <div style="background: #ffffff; border: 1px solid #dee2e6; border-radius: 4px; padding: 15px; white-space: pre-wrap;">
${validatedData.message}
              </div>
            </div>
            
            <div style="text-align: center; margin-top: 30px; padding-top: 20px; border-top: 1px solid #e9ecef;">
              <p style="color: #6c757d; font-size: 14px; margin: 0;">
                üïê –ü–∏—Å—å–º–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: ${new Date().toLocaleString("ru-RU", {
                  timeZone: "Europe/Moscow",
                  year: "numeric",
                  month: "long",
                  day: "numeric",
                  hour: "2-digit",
                  minute: "2-digit",
                })}
              </p>
            </div>
          </div>
        </div>
      `,
      text: `
–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ —Å —Å–∞–π—Ç–∞

–ò–º—è: ${validatedData.name}
Email: ${validatedData.email}
–¢–µ–ª–µ—Ñ–æ–Ω: ${validatedData.phone || "–ù–µ —É–∫–∞–∑–∞–Ω"}

–°–æ–æ–±—â–µ–Ω–∏–µ:
${validatedData.message}

–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: ${new Date().toLocaleString("ru-RU")}
      `,
    };

    // –û—Ç–ø—Ä–∞–≤–∫–∞ –ø–∏—Å—å–º–∞
    const info = await transporter.sendMail(mailOptions);

    console.log("‚úÖ –ü–∏—Å—å–º–æ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞ yakutproekt@mail.ru");
    console.log("Message ID:", info.messageId);

    return {
      success: true,
      message:
        "–ó–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.",
    };
  } catch (error: unknown) {
    if (error instanceof z.ZodError) {
      const errorMessages = error.errors
        .map((err) => `${err.path}: ${err.message}`)
        .join(", ");
      console.error("‚ùå –û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏:", errorMessages);
      return { success: false, message: `–û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏: ${errorMessages}` };
    }

    console.error("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ email:", error);
    return {
      success: false,
      message:
        "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞—è–≤–∫–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏ –Ω–∞–ø—Ä—è–º—É—é.",
    };
  }
}
